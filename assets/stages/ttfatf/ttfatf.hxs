//bygone
var backgroundB:FlxSprite;
var moonB:FlxSprite;
var buildingsB:FlxSprite;
var bridgeRopeB:FlxSprite;
var bridgeB:FlxSprite;

//unchecked
var backgroundL:FlxSprite;
var grassL:FlxSprite;
var fogL:FlxSprite;
var midgroundL:FlxSprite;
var stageForegroundL:FlxSprite;
var brimestoneHandL:FlxSprite;

function onCreate() {
    //bygone purpose 
        //boyfriend.x = 966;
        //dad.x = 50;
        PlayState.defaultCamZoom = 0.05;

        var consistentPosition:Array<Float> = [-300, -300];

        backgroundB = new FlxSprite(0, 0);
        backgroundB.loadGraphic(Paths.image('BG1 Clouds'));
        backgroundB.setGraphicSize(Std.int(backgroundB.width * 1.25));
        backgroundB.updateHitbox();
        backgroundB.setPosition(consistentPosition[0], consistentPosition[1]);
        backgroundB.antialiasing = true;
        backgroundB.scrollFactor.set(0.6, 0.6);
        backgroundB.active = false;
        add(backgroundB);

        moonB = new FlxSprite(0, 0);
        moonB.loadGraphic(Paths.image('BG1 Moon'));
        moonB.setGraphicSize(Std.int(moonB.width * 0.75));
        moonB.setPosition(consistentPosition[0], consistentPosition[1]);
        moonB.updateHitbox();
        moonB.antialiasing = true;
        moonB.scrollFactor.set(0.7, 0.7);
        moonB.active = false;
        add(moonB);

        buildingsB = new FlxSprite(0, 0);
        buildingsB.loadGraphic(Paths.image('BG1 Buildings'));
        buildingsB.setGraphicSize(Std.int(buildingsB.width * 1.15));
        buildingsB.setPosition(-160, -232);
        buildingsB.updateHitbox();
        buildingsB.antialiasing = true;
        buildingsB.scrollFactor.set(0.75, 0.75);
        buildingsB.active = false;
        add(buildingsB);

        bridgeRopeB = new FlxSprite(0, 0);
        bridgeRopeB.loadGraphic(Paths.image('BridgeRope'));
        bridgeRopeB.antialiasing = true;
        bridgeRopeB.setPosition(bridgeRopeB.width / 2.25, -64);
        bridgeRopeB.scrollFactor.set(0.9, 0.9);
        bridgeRopeB.active = false;
        add(bridgeRopeB);

        bridgeB = new FlxSprite(0, 0);
        bridgeB.loadGraphic(Paths.image('Bridge'));
        bridgeB.antialiasing = true;
        bridgeB.scrollFactor.set(0.9, 0.9);
        bridgeB.active = false;
        foreground.add(bridgeB);

        foreground.add(bridgeB);
        bygonStuff.add(backgroundB);
        bygonStuff.add(buildingsB);
        bygonStuff.add(bridgeB);

        // trace(boyfriend.x);
        // trace(dad.x);
    //hypno p1-2
        //boyfriend.x = 1166;
        //dad.x = -150;
        var consistentHyp12:Array<Float> = [-800, -300];
        var resizeBG:Float = 0.7;
        backgroundL = new FlxSprite(consistentHyp12[0], consistentHyp12[1]);
        backgroundL.loadGraphic(Paths.image('BACKGROUND'));
        backgroundL.setGraphicSize(Std.int(backgroundL.width * resizeBG));
        backgroundL.updateHitbox();
        backgroundL.antialiasing = true;
        backgroundL.scrollFactor.set(0.6, 0.6);
        backgroundL.active = false;
        // backgroundL.visible = false;
        add(backgroundL);

        grassL = new FlxSprite(consistentHyp12[0], consistentHyp12[1]);
        grassL.loadGraphic(Paths.image('Behind the clouds and fence'));
        grassL.setGraphicSize(Std.int(grassL.width * resizeBG));
        grassL.updateHitbox();
        grassL.antialiasing = true;
        grassL.scrollFactor.set(0.7, 0.7);
        grassL.active = false;
        // grassL.visible = false;
        add(grassL);

        fogL = new FlxSprite(consistentHyp12[0], consistentHyp12[1]);
        fogL.loadGraphic(Paths.image('Behind the Fence'));
        fogL.setGraphicSize(Std.int(fogL.width * resizeBG));
        fogL.updateHitbox();
        fogL.scrollFactor.set(0.8, 0.8);
        fogL.antialiasing = true;
        fogL.active = false;
        // fogL.visible = false;
        add(fogL);

        midgroundL = new FlxSprite(consistentHyp12[0], consistentHyp12[1]);
        var name:String = 'MIDGROUND';
        name = name + ' BLOOD';
        midgroundL.loadGraphic(Paths.image(name));
        midgroundL.setGraphicSize(Std.int(midgroundL.width * resizeBG));
        midgroundL.updateHitbox();
        midgroundL.antialiasing = true;
        // midground.scrollFactor.set(0.9, 0.9);
        midgroundL.active = false;
        // midgroundL.visible = false;
        add(midgroundL);

        stageForegroundL = new FlxSprite(consistentHyp12[0] - 100, consistentHyp12[1]);
        stageForegroundL.loadGraphic(Paths.image('FOREGROUND TREE'));
        stageForegroundL.setGraphicSize(Std.int(stageForegroundL.width * resizeBG));
        stageForegroundL.updateHitbox();
        stageForegroundL.antialiasing = true;
        stageForegroundL.scrollFactor.set(1.2, 1.2);
        stageForegroundL.active = false;
        // stageForegroundL.visible = false;
        foreground.add(stageForegroundL);
        
        bygonStuff.add(backgroundL);
        bygonStuff.add(grassL);
        bygonStuff.add(fogL);
        bygonStuff.add(midgroundL);
        foreground.add(stageForegroundL);
}

function onCreatePost() {
	PlayState.instance.disableCountdown = false;
	PlayState.instance.dadStrums.visible = false;

	if (FlxG.save.data.itemsPurchased.contains('Lit Candle') && !FlxG.save.data.activatedPurin)
		{
			FlxG.mouse.visible = true;
			FlxG.mouse.useSystemCursor = true;
		}
}

function onUpdate(elapsed) {
    // trace(dad.x);
    // trace(boyfriend.x);
    switch(PlayState.curBeat){
        case 68:
            trace("BALLS");
            backgroundL.visible = true;
            grassL.visible = true;
            fogL.visible = true;
            midgroundL.visible = true;
            stageForegroundL.visible = true;
    }
}

function onBeat(beat) {
    switch(beat){
        case 68:
            trace("COCK");
    }
}

function onEvent(eventName) {
    switch (eventName) { 
        case 'TTFATF Unchecked':
            trace("DICK!!!");
            backgroundB.visible = false;
            moonB.visible = false;
            buildingsB.visible = false;
            bridgeRopeB.visible = false;
            bridgeB.visible = false;

            backgroundL.visible = true;
            grassL.visible = true;
            fogL.visible = true;
            midgroundL.visible = true;
            stageForegroundL.visible = true;

            PlayState.boyfriend.x += 200;
            PlayState.dadOpponent.x -= 200;
    }
}